{"version":3,"sources":["assets/images/Graphicacy_logo.svg","constants.js","App/Legend/index.js","App/Header/index.js","App/MapContainer/Map/index.js","App/MapContainer/PercentChangeMap/index.js","App/MapContainer/Tooltip/index.js","App/MapContainer/index.js","App/index.js","index.js"],"names":["module","exports","COLORS","DEFAULT_VIEWPORT","latitude","longitude","zoom","bearing","pitch","DOLLAR_FORMATTER","format","PERCENT_FORMATTER","SI_DOLLAR_FORMATTER","DATA_PROPERTY","PREVIOUS_DATA_PROPERTY","PERCENT_CHANGE_PROPERTY","LAYER_PROPERTIES","incomeBins","percentChangeBins","INCOME_LEGEND_COLORS","schemeBlues","map","d","i","PERCENT_CHANGE_LEGEND_COLORS","schemeRdYlBu","STATES","label","id","fillColorPaints","concat","merge","legendColors","formatter","legendFormatter","properties","isActive","length","LINE_PAINT","useStyles","makeStyles","theme","legend","flex","display","color","fontSize","marginBlockStart","marginBlockEnd","fontStyle","paddingBottom","innerContainer","flexDirection","width","legendItem","height","textAlign","Legend","activeToggle","classes","className","idx","value","key","style","backgroundColor","header","zIndex","padding","justifyContent","breakpoints","down","flexWrap","info","marginRight","marginBottom","leftContainer","fontWeight","lineHeight","marginTop","toggleContainer","toggleGroup","toggleBtn","whiteSpace","textTransform","borderRadius","builtByContainer","marginLeft","margin","Header","state","setState","toggles","find","toggle","href","target","rel","ToggleButtonGroup","exclusive","onChange","event","newValue","prevState","aria-label","ToggleButton","src","graphicacyLogo","alt","container","position","top","bottom","yearRangeContainer","alignItems","Map","_onViewportChange","mapboxRef","onMouseMove","beforeMap","useRef","mapboxCompareRef","useEffect","current","offsetWidth","offsetHeight","compare","Compare","getMap","remove","ref","left","viewport","mapStyle","onViewportChange","mapboxApiAccessToken","process","type","url","beforeId","filter","source","source-layer","paint","right","PercentChangeMap","mapRef","tooltip","pointerEvents","maxWidth","props","tooltipWidth","opacity","boxShadow","topContainer","borderBottom","bottomContainer","metricsContainer","yearContainer","percentChangeContainer","incomeLabel","Tooltip","activeFeature","x","y","tooltipHeight","percentChange","name","mapContainer","MapContainer","feature","srcEvent","offsetX","offsetY","point","queryRenderedFeatures","layers","err","removeFeatureState","sourceLayer","setFeatureState","hover","onMouseOut","app","scrollX","App","useState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eec56345.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Graphicacy_logo.a21d2b02.svg\";","import { format } from 'd3-format';\nimport { schemeBlues, schemeRdYlBu } from 'd3-scale-chromatic';\nimport { merge } from 'd3-array';\n\nexport const COLORS = {\n  darkGray: '#353131',\n  white: '#fff',\n  black: '#000',\n  blue: '#4292c6',\n  red: '#d73027',\n  neutral: '#ffffbf',\n};\n\nexport const DEFAULT_VIEWPORT = {\n  latitude: 41.5096879,\n  longitude: -73.0447974,\n  zoom: 8,\n  bearing: 0,\n  pitch: 0,\n};\n\nexport const DOLLAR_FORMATTER = format('$,.0f');\nexport const PERCENT_FORMATTER = format(',.0%');\nconst SI_DOLLAR_FORMATTER = format('$.3s');\n\nexport const DATA_PROPERTY = 'total_est';\nexport const PREVIOUS_DATA_PROPERTY = 'previous_total_est';\nexport const PERCENT_CHANGE_PROPERTY = 'percent_change';\n\nexport const LAYER_PROPERTIES = {\n  style: 'mapbox://styles/graphicacy/ckiqeeqtl0sgz18qv6xnslftp',\n  name: 'tractsclippedbystatewithalldata',\n  source: 'mapbox://graphicacy.1a7bxyc8',\n};\n\n// Color the census tracts based on the 7 Jenks bins from CartoDB SQL function\nconst incomeBins = [35419, 54875, 74271, 96503, 125157, 167104, 266908];\nconst percentChangeBins = [-0.161, -0.11, -0.05, 0, 0.05, 0.11, 0.161];\nconst INCOME_LEGEND_COLORS = schemeBlues[7].map((d, i) => [d, incomeBins[i]]);\nconst PERCENT_CHANGE_LEGEND_COLORS = schemeRdYlBu[7].map((d, i) => [d, percentChangeBins[i]]);\nconst FILL_OPACITY = 0.9;\n\nexport const STATES = [\n  {\n    label: 'Total Income',\n    id: 'total_income',\n    fillColorPaints: [\n      {\n        'fill-color': ['step', ['get', DATA_PROPERTY]].concat(merge(INCOME_LEGEND_COLORS)).concat('#fff'),\n        'fill-opacity': FILL_OPACITY,\n      },\n      {\n        'fill-color': ['step', ['get', PREVIOUS_DATA_PROPERTY]].concat(merge(INCOME_LEGEND_COLORS)).concat('#fff'),\n        'fill-opacity': FILL_OPACITY,\n      },\n    ],\n    legendColors: INCOME_LEGEND_COLORS,\n    formatter: DOLLAR_FORMATTER,\n    legendFormatter: SI_DOLLAR_FORMATTER,\n    properties: [PREVIOUS_DATA_PROPERTY, DATA_PROPERTY],\n    isActive: true,\n  },\n  {\n    label: '% Change',\n    id: 'percent_change',\n    fillColorPaints: [\n      {\n        'fill-color': ['step', ['get', PERCENT_CHANGE_PROPERTY]]\n          .concat(merge(PERCENT_CHANGE_LEGEND_COLORS))\n          .concat(PERCENT_CHANGE_LEGEND_COLORS[PERCENT_CHANGE_LEGEND_COLORS.length - 1][0]),\n        'fill-opacity': FILL_OPACITY,\n      },\n    ],\n    legendColors: PERCENT_CHANGE_LEGEND_COLORS,\n    formatter: PERCENT_FORMATTER,\n    legendFormatter: PERCENT_FORMATTER,\n    properties: [PERCENT_CHANGE_PROPERTY],\n    isActive: false,\n  },\n];\n\nexport const LINE_PAINT = {\n  'line-width': ['case', ['boolean', ['feature-state', 'hover'], false], 3, 0.5],\n  'line-color': ['case', ['boolean', ['feature-state', 'hover'], false], '#000', '#969090'],\n  'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0],\n};\n\nexport const BEFORE_ID = 'bridge-rail';\n","import React from 'react';\nimport { COLORS, PERCENT_CHANGE_PROPERTY } from '../../constants';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  legend: {\n    flex: '0 0 420px',\n    display: 'flex',\n    color: COLORS.darkGray,\n    fontSize: '14px',\n    '& h4': {\n      marginBlockStart: 0,\n      marginBlockEnd: '.25rem',\n    },\n    '& h5': {\n      marginBlockStart: 0,\n      marginBlockEnd: '.5rem',\n      fontStyle: 'italic',\n    },\n    '& :not(:last-child)': {\n      paddingBottom: '.25rem',\n    },\n  },\n  innerContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  legendItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '0 0 60px',\n    '& .block': {\n      width: '100%',\n      height: '17px',\n    },\n    textAlign: 'end',\n  },\n}));\n\nconst Legend = ({ activeToggle }) => {\n  const width = 500;\n  const classes = useStyles({ width });\n\n  return (\n    <div className={classes.legend}>\n      <div className={classes.innerContainer}>\n        {activeToggle.legendColors.map(([color, value], idx) => {\n          return (\n            <div\n              className={classes.legendItem}\n              key={`legend-item-for-${color}`}\n              // style={{ width: width / activeToggle.legendColors.length }}\n            >\n              <div className=\"block\" style={{ backgroundColor: color }} />\n              <div>{`${!idx ? '<' : ''}${\n                idx === activeToggle.legendColors.length - 1 && activeToggle.properties[0] === PERCENT_CHANGE_PROPERTY ? '>' : ''\n              }${activeToggle.legendFormatter(value)}`}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport graphicacyLogo from '../../assets/images/Graphicacy_logo.svg';\nimport Legend from '../Legend';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../constants';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: 'flex',\n    zIndex: '999',\n    backgroundColor: '#fff',\n    width: 'calc(100% - 50px)',\n    padding: '25px 25px 15px',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      flexWrap: 'wrap',\n    },\n  },\n  info: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: '1 1 auto',\n    '& > *': {\n      '&:not(:last-child)': {\n        marginRight: 60,\n        marginBottom: 20,\n        [theme.breakpoints.down('sm')]: {\n          flex: '0 0 100%',\n        },\n      },\n    },\n  },\n  leftContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: COLORS.darkGray,\n    fontWeight: 'bold',\n    fontSize: '20px',\n    lineHeight: 1.3,\n    flex: '0 0 340px',\n    '& .source': {\n      marginTop: '2px',\n      fontWeight: 'normal',\n      fontSize: '14px',\n      lineHeight: 1.36,\n      '& a': {\n        color: COLORS.blue,\n      },\n    },\n  },\n  toggleContainer: {},\n  toggleGroup: {\n    height: 30,\n  },\n  toggleBtn: {\n    whiteSpace: 'nowrap',\n    padding: '0 20px',\n    textTransform: 'capitalize',\n    '&:first-child': {\n      borderRadius: '20px 0 0 20px',\n    },\n    '&:last-child': {\n      borderRadius: '0 20px 20px 0',\n    },\n  },\n  builtByContainer: {\n    display: 'flex',\n    height: 30,\n    paddingBottom: 10,\n    '& img': {\n      marginLeft: '6px',\n      height: 23,\n    },\n    '& h3': {\n      whiteSpace: 'noWrap',\n      margin: 0,\n    },\n    '& a': {\n      display: 'block',\n    },\n    [theme.breakpoints.down('sm')]: {\n      paddingBottom: 0,\n      marginTop: 20,\n    },\n  },\n}));\n\nconst Header = ({ state, setState }) => {\n  const classes = useStyles();\n  const activeToggle = state.toggles.find((toggle) => toggle.isActive);\n  const changeToggle = (event, newValue) => {\n    setState((prevState) => ({\n      ...prevState,\n      toggles: prevState.toggles.map((toggle) => ({\n        ...toggle,\n        isActive: toggle.id === newValue,\n      })),\n    }));\n  };\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.info}>\n        <div className={classes.leftContainer}>\n          <div>How has Median Household Income changed over time?</div>\n          <div className=\"source\">\n            Source:{' '}\n            <a\n              href=\"http://data.diversitydatakids.org/dataset/19013_1_d-median-household-income--dollar--by-race-ethnicity/resource/c5334c27-3cf0-439b-b8b0-5ff7eb632b57\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              diversitydatakids.org, ACS\n            </a>\n          </div>\n        </div>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup\n            className={classes.toggleGroup}\n            value={activeToggle.id}\n            exclusive\n            onChange={changeToggle}\n            aria-label={'toggle'}\n          >\n            {state.toggles.map((toggle) => {\n              return (\n                <ToggleButton\n                  className={classes.toggleBtn}\n                  key={`toggle-button-for-${toggle.id}`}\n                  value={toggle.id}\n                  aria-label={toggle.label}\n                >\n                  {toggle.label}\n                </ToggleButton>\n              );\n            })}\n          </ToggleButtonGroup>\n        </div>\n        <Legend activeToggle={activeToggle} />\n      </div>\n      <div className={classes.builtByContainer}>\n        <div>\n          <h3>BUILT BY</h3>\n        </div>\n        <div>\n          <a href=\"https://graphicacy.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={graphicacyLogo} alt=\"Large G branding for Graphicacy - a data visualization and design firm.\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useRef, useEffect } from 'react';\nimport ReactMapGL, { Layer, Source } from 'react-map-gl';\nimport { COLORS, LAYER_PROPERTIES, LINE_PAINT, BEFORE_ID } from '../../../constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Compare from 'mapbox-gl-compare';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'relative',\n    width: '100%',\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: '100%',\n  },\n  yearRangeContainer: {\n    position: 'absolute',\n    top: 30,\n    width: '123px',\n    height: '30px',\n    padding: '1px 8px 3px 15px',\n    backgroundColor: 'rgb(9, 69, 148, .3)',\n    fontSize: '20px',\n    fontWeight: 'bold',\n    color: COLORS.white,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n}));\n\nconst Map = ({ state, setState, activeToggle, _onViewportChange, mapboxRef, onMouseMove }) => {\n  const classes = useStyles();\n  const beforeMap = useRef(null);\n  const mapboxCompareRef = useRef(null);\n\n  useEffect(() => {\n    const { offsetWidth, offsetHeight } = beforeMap.current;\n    const compare = new Compare(mapboxRef.current.getMap(), mapboxCompareRef.current.getMap(), '#comparison-container');\n    setState((prevState) => {\n      return {\n        ...prevState,\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    });\n    // console.log(mapboxRef.current.getMap().style)\n    return () => compare.remove();\n  }, [mapboxRef, setState]);\n\n  return (\n    <div id=\"comparison-container\" className={classes.container}>\n      <div id=\"before\" className={classes.map} ref={beforeMap}>\n        <div className={classes.yearRangeContainer} style={{ left: 0 }}>\n          2008 - 2012\n        </div>\n        <ReactMapGL\n          {...state.viewport}\n          ref={mapboxCompareRef}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle={LAYER_PROPERTIES.style}\n          onViewportChange={_onViewportChange}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        >\n          <Source id={LAYER_PROPERTIES.name} type=\"vector\" url={LAYER_PROPERTIES.source} />\n          <Layer\n            beforeId={BEFORE_ID}\n            type=\"fill\"\n            id=\"fill_layer\"\n            filter={['has', activeToggle.properties[0]]}\n            source={LAYER_PROPERTIES.name}\n            source-layer={LAYER_PROPERTIES.name}\n            paint={activeToggle.fillColorPaints[0]}\n          />\n          <Layer type=\"line\" source={LAYER_PROPERTIES.name} source-layer={LAYER_PROPERTIES.name} paint={LINE_PAINT} />\n        </ReactMapGL>\n      </div>\n      <div id=\"after\" className={classes.map}>\n        <div className={classes.yearRangeContainer} style={{ right: 0, zIndex: 0 }}>\n          2013 - 2017\n        </div>\n        <ReactMapGL\n          {...state.viewport}\n          ref={mapboxRef}\n          width=\"100%\"\n          height=\"100%\"\n          onMouseMove={onMouseMove}\n          mapStyle={LAYER_PROPERTIES.style}\n          onViewportChange={_onViewportChange}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        >\n          <Source id={LAYER_PROPERTIES.name} type=\"vector\" url={LAYER_PROPERTIES.source} />\n          <Layer\n            beforeId={BEFORE_ID}\n            type=\"fill\"\n            id=\"fill_layer\"\n            filter={['has', activeToggle.properties[1]]}\n            source={LAYER_PROPERTIES.name}\n            source-layer={LAYER_PROPERTIES.name}\n            paint={activeToggle.fillColorPaints[1]}\n          />\n          <Layer type=\"line\" source={LAYER_PROPERTIES.name} source-layer={LAYER_PROPERTIES.name} paint={LINE_PAINT} />\n        </ReactMapGL>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","import React, { useRef, useEffect } from 'react';\nimport ReactMapGL, { Layer, Source } from 'react-map-gl';\nimport { LAYER_PROPERTIES, LINE_PAINT, BEFORE_ID } from '../../../constants';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  map: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: '100%',\n  },\n}));\n\nconst PercentChangeMap = ({ state, setState, activeToggle, _onViewportChange, mapboxRef, onMouseMove }) => {\n  const classes = useStyles();\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    const { offsetWidth, offsetHeight } = mapRef.current;\n    setState((prevState) => {\n      return {\n        ...prevState,\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    });\n  }, [setState]);\n\n  return (\n    <div id=\"percent-change-map\">\n      <div className={classes.map} ref={mapRef}>\n        <ReactMapGL\n          {...state.viewport}\n          ref={mapboxRef}\n          width=\"100%\"\n          height=\"100%\"\n          onMouseMove={onMouseMove}\n          mapStyle={LAYER_PROPERTIES.style}\n          onViewportChange={_onViewportChange}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        >\n          <Source id={LAYER_PROPERTIES.name} type=\"vector\" url={LAYER_PROPERTIES.source} />\n          <Layer\n            beforeId={BEFORE_ID}\n            type=\"fill\"\n            id=\"fill_layer\"\n            filter={['has', activeToggle.properties[0]]}\n            source={LAYER_PROPERTIES.name}\n            source-layer={LAYER_PROPERTIES.name}\n            paint={activeToggle.fillColorPaints[0]}\n          />\n          <Layer type=\"line\" source={LAYER_PROPERTIES.name} source-layer={LAYER_PROPERTIES.name} paint={LINE_PAINT} />\n        </ReactMapGL>\n      </div>\n    </div>\n  );\n};\n\nexport default PercentChangeMap;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n  COLORS,\n  PREVIOUS_DATA_PROPERTY,\n  DATA_PROPERTY,\n  DOLLAR_FORMATTER,\n  PERCENT_CHANGE_PROPERTY,\n  PERCENT_FORMATTER,\n} from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  tooltip: {\n    position: 'absolute',\n    margin: '8px',\n    fontSize: '18px',\n    zIndex: '9',\n    pointerEvents: 'none',\n    maxWidth: (props) => props.tooltipWidth,\n    padding: '10px',\n    opacity: '0.9',\n    borderRadius: '5px',\n    boxShadow: '1px 3px 15px 0 rgba(0, 0, 0, 0.49)',\n    backgroundColor: '#2e2e2e',\n  },\n  header: {\n    width: 'calc(100% - 10px)',\n    height: 'calc(100% - 10px)',\n    color: COLORS.white,\n    padding: 5,\n  },\n  topContainer: {\n    '& .name': {\n      fontSize: '20px',\n      fontWeight: 'bold',\n    },\n    paddingBottom: '16.5px',\n    borderBottom: `solid 1px ${COLORS.white}`,\n  },\n  bottomContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n  metricsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n  yearContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '60%',\n  },\n  percentChangeContainer: {\n    fontSize: '32px',\n    width: '107px',\n    height: '43px',\n    margin: '1px 0 0',\n    fontWeight: 'bold',\n    borderRadius: '5px',\n    textAlign: 'center',\n  },\n  incomeLabel: {\n    margin: '10px 0',\n  },\n}));\n\nconst Tooltip = ({ activeFeature, x, y, width, height }) => {\n  const tooltipWidth = 335;\n  const tooltipHeight = 195;\n  const buffer = 10;\n  const classes = useStyles({ tooltipWidth, tooltipHeight });\n\n  if (!activeFeature) return null;\n\n  // If the tooltip is going over the edge of the right side of the screen\n  if (tooltipWidth + x > width - buffer) {\n    x -= tooltipWidth + 40;\n  }\n\n  // If the tooltip is going over the edge of the bottom side of the screen\n  if (tooltipHeight + y > height - buffer) {\n    y -= tooltipHeight;\n  }\n\n  const percentChange = +activeFeature.properties[PERCENT_CHANGE_PROPERTY];\n\n  // Get the percent change background color\n  let backgroundColor = COLORS.neutral;\n  let color = COLORS.darkGray;\n  if (percentChange > 0.009) {\n    backgroundColor = COLORS.blue;\n    color = COLORS.white;\n  } else if (percentChange < -0.009) {\n    backgroundColor = COLORS.red;\n    color = COLORS.white;\n  }\n\n  return (\n    <div className={classes.tooltip} style={{ left: x, top: y }}>\n      <div className={classes.header}>\n        <div className={classes.topContainer}>\n          <div className=\"name\">{activeFeature.properties.name}</div>\n        </div>\n        <div className={classes.bottomContainer}>\n          <div className={classes.incomeLabel}>Median Household Income</div>\n          <div className={classes.metricsContainer}>\n            <div className={classes.yearContainer}>\n              <div>\n                2008-2012: <b>{DOLLAR_FORMATTER(activeFeature.properties[PREVIOUS_DATA_PROPERTY])}</b>\n              </div>\n              <div>\n                2013-2017: <b>{DOLLAR_FORMATTER(activeFeature.properties[DATA_PROPERTY])}</b>\n              </div>\n            </div>\n            <div className={classes.percentChangeContainer} style={{ backgroundColor, color }}>\n              {`${percentChange >= 0 ? '+' : ''}${PERCENT_FORMATTER(percentChange)}`}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Map from './Map';\nimport PercentChangeMap from './PercentChangeMap';\nimport Tooltip from './Tooltip';\nimport { LAYER_PROPERTIES, PERCENT_CHANGE_PROPERTY } from '../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    display: 'flex',\n    position: 'relative',\n    flex: '1 1 auto',\n  },\n}));\n\nconst MapContainer = ({ state, setState }) => {\n  const classes = useStyles();\n  const mapboxRef = useRef(null);\n  const activeToggle = state.toggles.find((toggle) => toggle.isActive);\n\n  const _onViewportChange = (viewport) =>\n    setState((prevState) => {\n      return {\n        ...prevState,\n        viewport,\n      };\n    });\n\n  const onMouseLeave = () => {\n    const map = mapboxRef.current.getMap();\n    map.removeFeatureState({\n      source: LAYER_PROPERTIES.name,\n      sourceLayer: LAYER_PROPERTIES.name,\n    });\n    setState((prevState) => ({\n      ...prevState,\n      activeFeature: null,\n    }));\n  };\n\n  const onMouseMove = (event) => {\n    const {\n      srcEvent: { offsetX, offsetY },\n    } = event;\n    const point = [offsetX, offsetY];\n    const map = mapboxRef.current.getMap();\n    let feature;\n    try {\n      feature = mapboxRef.current.getMap().queryRenderedFeatures(point, { layers: ['fill_layer'] })[0];\n    } catch (err) {\n      return;\n    }\n\n    if (feature) {\n      if (state.activeFeature) {\n        map.removeFeatureState({\n          source: LAYER_PROPERTIES.name,\n          sourceLayer: LAYER_PROPERTIES.name,\n        });\n      }\n      map.setFeatureState(\n        {\n          source: LAYER_PROPERTIES.name,\n          sourceLayer: LAYER_PROPERTIES.name,\n          id: feature.id,\n        },\n        {\n          hover: true,\n        },\n      );\n    }\n\n    setState((prevState) => ({\n      ...prevState,\n      activeFeature: feature,\n      x: offsetX,\n      y: offsetY,\n    }));\n  };\n\n  return (\n    <div className={classes.mapContainer} onMouseOut={onMouseLeave}>\n      {activeToggle.properties[0] === PERCENT_CHANGE_PROPERTY ? (\n        <PercentChangeMap\n          state={state}\n          setState={setState}\n          activeToggle={activeToggle}\n          _onViewportChange={_onViewportChange}\n          mapboxRef={mapboxRef}\n          onMouseMove={onMouseMove}\n        />\n      ) : (\n        <Map\n          state={state}\n          setState={setState}\n          activeToggle={activeToggle}\n          _onViewportChange={_onViewportChange}\n          mapboxRef={mapboxRef}\n          onMouseMove={onMouseMove}\n        />\n      )}\n      <Tooltip {...state} />\n    </div>\n  );\n};\n\nexport default MapContainer;\n","import React, { useState } from 'react';\nimport { DEFAULT_VIEWPORT, STATES } from '../constants';\nimport Header from './Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MapContainer from './MapContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    width: '100vw',\n    scrollX: 'none',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    viewport: DEFAULT_VIEWPORT,\n    toggles: STATES,\n    activeFeature: null,\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n  });\n\n  return (\n    <div className={classes.app}>\n      <Header state={state} setState={setState} />\n      <MapContainer state={state} setState={setState} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}